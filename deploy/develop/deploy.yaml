---
apiVersion: v1
kind: ConfigMap
metadata:
  name: ${SERVICE_NAME}
  namespace: ${NAMESPACE}
data:

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ${SERVICE_NAME}
  namespace: ${NAMESPACE}
spec:
  selector:
    matchLabels:
      service: ${SERVICE_NAME}
  replicas: 1
  template:
    metadata:
      labels:
        service: ${SERVICE_NAME}
        logger: nlog
      annotations:
    spec:
      terminationGracePeriodSeconds: 60
      containers:
      - name: ${SERVICE_NAME}
        image: ${IMAGE}
        env:
        - name: TZ
          value: Etc/GMT-7
        ports:
        - containerPort: ${CONTAINER_PORT}
        volumeMounts:
          - name: ${SERVICE_NAME}
            mountPath: /usr/src/app/.env
            subPath: .env
      nodeSelector:
      imagePullSecrets:
      - name: registry
      restartPolicy: Always
      volumes:
      - name: ${SERVICE_NAME}
        configMap:
          name: ${SERVICE_NAME}
---
apiVersion: v1
kind: Service
metadata:
  name: ${SERVICE_NAME}
  namespace: ${NAMESPACE}
spec:
  ports:
  - port: ${CONTAINER_PORT}
    protocol: TCP
  selector:
    service: ${SERVICE_NAME}
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name:  ${SERVICE_NAME}
  namespace: ${NAMESPACE}
  annotations:
    kubernetes.io/ingress.class: nginx
spec:
  rules:
  - host: ${DOMAIN}
    http:
      paths:
      - path: ${SERVICE_PATH}
        pathType: Prefix
        backend:
          service:
            name: ${SERVICE_NAME}
            port:
              number: ${CONTAINER_PORT}
